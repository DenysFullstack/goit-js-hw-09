{"mappings":"YAaA,SAASA,EAAcC,EAAUC,GAEf,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEpDA,E,IAIHS,MAAK,SAACC,G,OAAUC,QAAQC,IAAIF,E,IAC5BG,OAAM,SAACC,G,OAASH,QAAQC,IAAIE,E,IA5BlBC,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAGF,IAFA,IAAgCC,EAAAF,EAAEG,OAAOC,SAAjCtB,EAAwBoB,EAAxBpB,MAAOuB,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OACjBC,EAASC,OAAOF,EAAOG,OACnBC,EAAI,EAAGA,EAAIH,EAAQG,GAAG,EAC5B9B,EAAc8B,EAAE,EAAGF,OAAO1B,EAAM2B,OAASD,OAAOH,EAAKI,MAAQC,G","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form')\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e){\n  e.preventDefault();\n  const { delay, step, amount } = e.target.elements;\n  let number = Number(amount.value)\n  for(let i = 0; i < number; i+=1) {\n    createPromise(i+1, Number(delay.value) + Number(step.value * i))\n  }\n}\n\nfunction createPromise(position, delay) {\n\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(()=>{\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`)\n      }\n    },delay)\n    \n  })\n  promise\n  .then((result)=> console.log(result))\n  .catch((error)=> console.log(error))\n}\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","then","result","console","log","catch","error","document","querySelector","addEventListener","e","preventDefault","_elements","target","elements","step","amount","number","Number","value","i"],"version":3,"file":"03-promises.349c7d54.js.map"}