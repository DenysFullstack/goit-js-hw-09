{"mappings":"AAaA,SAASA,EAAcC,EAAUC,GAEf,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,MAAU,GAEtDA,EAAM,IAITQ,MAAMC,GAAUC,QAAQC,IAAIF,KAC5BG,OAAOC,GAASH,QAAQC,IAAIE,I,CA5BlBC,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBACF,MAAMlB,MAAEA,EAAKmB,KAAEA,EAAIC,OAAEA,GAAWH,EAAEI,OAAOC,SACzC,IAAIC,EAASC,OAAOJ,EAAOK,OAC3B,IAAI,IAAIC,EAAI,EAAGA,EAAIH,EAAQG,GAAG,EAC5B5B,EAAc4B,EAAE,EAAGF,OAAOxB,EAAMyB,OAASD,OAAOL,EAAKM,MAAQC,G","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form')\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e){\n  e.preventDefault();\n  const { delay, step, amount } = e.target.elements;\n  let number = Number(amount.value)\n  for(let i = 0; i < number; i+=1) {\n    createPromise(i+1, Number(delay.value) + Number(step.value * i))\n  }\n}\n\nfunction createPromise(position, delay) {\n\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(()=>{\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`)\n      }\n    },delay)\n    \n  })\n  promise\n  .then((result)=> console.log(result))\n  .catch((error)=> console.log(error))\n}\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","result","console","log","catch","error","document","querySelector","addEventListener","e","preventDefault","step","amount","target","elements","number","Number","value","i"],"version":3,"file":"03-promises.61014be2.js.map"}